#!/bin/bash
# bin/compile <build-dir> <cache-dir> <env-dir>

set -e            # fail fast
set -o pipefail   # do not ignore exit codes when piping output

# Heroku-provided params
BUILD_DIR="$1"
CACHE_DIR="$2"
ENV_DIR="$3"
BP_DIR=`cd $(dirname $0); cd ..; pwd`

POSTGREST_VER=${POSTGREST_VER:-10.0.0}
CLEAR_CACHE=${CLEAR_CACHE:-0}

export_env_dir() {
  local env_dir=${1:-$ENV_DIR}
  local allowlist_regex=${2:-''}
  local blocklist_regex=${3:-'^(PATH|GIT_DIR|CPATH|CPPATH|LD_PRELOAD|LIBRARY_PATH|BUILDPACK_URL)$'}

  if [ -d "$env_dir" ]; then
    echo "-----> Exporting config vars"
    for e in $(ls $env_dir); do
      echo "$e" | grep -E "$allowlist_regex" | grep -qvE "$blocklist_regex" &&
        echo "       $e" &&
        export "$e=$(cat $env_dir/$e)"
      :
    done
  fi
}

export_env_dir

if [[ $CLEAR_CACHE -eq 1 ]] ; then
  echo "-----> Clearing the buildpack cache"
  rm -fr $CACHE_DIR/
fi

############# Library files ###############################

# if [ ! -e $CACHE_DIR/ghc-libs ]; then
#   LIBS_URL="https://github.com/PostgREST/postgrest-heroku/releases/download/v0.4.4.0/ghc-libs.tar.xz"
#   if curl --output /dev/null --silent --head --fail $LIBS_URL; then
#     echo "-----> Downloading and caching libraries for PostgREST"
#     mkdir -p $CACHE_DIR
#     curl -# -L $LIBS_URL | tar xJ -C $CACHE_DIR
#     cp -R $CACHE_DIR/ghc-libs $BUILD_DIR
#   else
#     echo "-----> Could not find prebuilt libraries"
#     exit 1
#   fi
# else
#   echo "-----> Restoring cached libraries"
#   cp -R $CACHE_DIR/ghc-libs $BUILD_DIR
# fi

############# PostgREST binary ################################

BIN="postgrest-${POSTGREST_VER}"

RELEASE_VER="v${POSTGREST_VER}"

FILE_SUFFIX="linux-static-x64"

if [ ! -e $CACHE_DIR/$BIN ]; then
  BIN_URL="https://github.com/PostgREST/postgrest/releases/download/v${POSTGREST_VER}/postgrest-${RELEASE_VER}-${FILE_SUFFIX}.tar.xz"
  if curl --output /dev/null --silent --head --fail $BIN_URL; then
    echo "-----> Downloading and caching PostgREST $POSTGREST_VER binary"
    mkdir -p $CACHE_DIR
    curl -# -L $BIN_URL | tar xJ -C $CACHE_DIR
    mv $CACHE_DIR/postgrest $CACHE_DIR/$BIN
  else
    echo "-----> Could not find prebuilt $BIN"
    exit 1
  fi
fi

# echo "-----> Restoring cached $BIN"
# cp -R $CACHE_DIR/$BIN $BUILD_DIR

# echo "-----> Persisting settings"
# PROFILE_PATH="$BUILD_DIR/.profile.d/postgrest.sh"
# mkdir -p $(dirname $PROFILE_PATH)
# # Usage: $ set-default-env key value
# function set-default-env (){
#   echo "export $1=\${$1:-$2}" >> $PROFILE_PATH
# }

# set-default-env LD_LIBRARY_PATH /app/ghc-libs:/usr/lib

echo "-----> Remember to edit your Procfile as follows"
echo "web: PGRST_SERVER_HOST=0.0.0.0 PGRST_SERVER_PORT=\${PORT} PGRST_DB_URI=\${PGRST_DB_URI:-\${DATABASE_URL}} ./postgrest-\${POSTGREST_VER}"

echo "-----> ❤ stay declarative ❤"
